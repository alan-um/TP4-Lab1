package tp4.Vistas;

import java.awt.event.KeyEvent;
import static java.time.Clock.system;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
//import static javax.swing.JOptionPane.ERROR_MESSAGE;

/**
 *
 * @author alancito
 */
public class TP4_Lab1 extends javax.swing.JFrame {

    /**
     * Creates new form TP4_Lab1
     */
    public TP4_Lab1() {
        initComponents();
        
        //Inicializamos los textos que se muestran en jTextField y jButton
        jtTempC.setText("");
        jtTempF.setText("");
        jbConvertir.setText("Convertir");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtTempC = new javax.swing.JTextField();
        jbConvertir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtTempF = new javax.swing.JTextField();
        jButtonSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor de temperatura");
        setBackground(new java.awt.Color(241, 238, 220));
        setPreferredSize(new java.awt.Dimension(400, 350));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Conversor de Temperatura");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel2.setText("Ingrese la Temperatura en °C:");

        jtTempC.setText("jtTempC");
        jtTempC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtTempCFocusGained(evt);
            }
        });
        jtTempC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtTempCKeyPressed(evt);
            }
        });

        jbConvertir.setBackground(new java.awt.Color(179, 200, 207));
        jbConvertir.setText("jbConvertir");
        jbConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConvertirActionPerformed(evt);
            }
        });
        jbConvertir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbConvertirKeyPressed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("La Temperatura en °F es:");

        jtTempF.setEditable(false);
        jtTempF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtTempF.setText("jtTempF");
        jtTempF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtTempFActionPerformed(evt);
            }
        });

        jButtonSalir.setBackground(new java.awt.Color(190, 215, 220));
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtTempC, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(jbConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtTempF, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSalir)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtTempC, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jbConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtTempF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Evento de hacer foco en jTextField de Temperatura en Celsius
    private void jtTempCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtTempCFocusGained
        // Borra el jTextTempC y escribe "---" en el jTextTempF
        jtTempC.setText("");
        jtTempF.setText("---");
    }//GEN-LAST:event_jtTempCFocusGained
    
    //Evento de hacer CLICK en el boton Convertir
    private void jbConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConvertirActionPerformed
       convetir();//Llama al metodo Convertir, sus intrucciones están más abajo!!
    }//GEN-LAST:event_jbConvertirActionPerformed

    //Evento de apretar ENTER para Convertir.
    private void jtTempCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtTempCKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            convetir();//Llama al metodo Convertir, sus intrucciones están más abajo!!
        }
    }//GEN-LAST:event_jtTempCKeyPressed

    //Evento de apretar ENTER en el botón Convertir.
    private void jbConvertirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbConvertirKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            convetir();//Llama al metodo Convertir, sus intrucciones están más abajo!!
        }
    }//GEN-LAST:event_jbConvertirKeyPressed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed

     System.exit(0);        
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jtTempFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtTempFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtTempFActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TP4_Lab1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TP4_Lab1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TP4_Lab1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TP4_Lab1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TP4_Lab1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jbConvertir;
    private javax.swing.JTextField jtTempC;
    private javax.swing.JTextField jtTempF;
    // End of variables declaration//GEN-END:variables

    private void convetir() {
        
        //EVALUA SI EL DATO INGRESADO ES UN DOUBLE        
        // Usa Pattern (clase patrón, para comprobar si es un double o no)
        Pattern p=Pattern.compile("^[-+]?[0-9]*\\.?[0-9]+(?:[eE][-+]?[0-9]+)?$");//Expresión regular de DOOBLE
        Matcher m=p.matcher(jtTempC.getText());//Busca que coincida el jText con la expresión regular
        if(!m.matches()){//Si NO coincide envía advertencia y retoma el foco al jTextTempC.
            //JOptionPane.showMessageDialog(this, "Debe ingresar la Temperatura en °C en formato numérico.");
            JOptionPane.showMessageDialog(this, "Debe ingresar la Temperatura en °C en formato numérico.", "", JOptionPane.ERROR_MESSAGE);
            jtTempC.requestFocus();
            return;//Finaliza el método
        }

        //CONVERSION
        // Toma el valor del jTextTempC lo guarda en una variable,
        //calcula °F y los muestra en el jTextTempF
        double tempC, tempF;
        tempC=Double.parseDouble(jtTempC.getText());
        tempF=tempC*9/5+32;
        
        //Muestra los datos en un cuadro de dialogo emergente
        JOptionPane.showMessageDialog(this, "La temperatura ingresada en °F es: "+Double.toString(tempF)+"°F.", "Conversion realizada", JOptionPane.INFORMATION_MESSAGE);
        
        //Muestra los datos en el jTextTempF
        jtTempF.setText(Double.toString(tempF));
        jtTempF.requestFocus();                
    }
}
